#!/bin/bash

set -eou pipefail

SOURCE="${BASH_SOURCE[0]}"
# resolve $SOURCE until the file is no longer a symlink
while [ -h "$SOURCE" ]; do
  DIR="$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  # if $SOURCE was a relative symlink, we need to resolve it relative to the
  # path where the symlink file was located
  [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE"
done
SCRIPT_DIR="$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )"

if [ "$#" -ne 4 ]; then
  echo "Script requires:"
  echo "1. Container Directory"
  echo "2. Container Name"
  echo "3. Size in MiB"
  echo "4. Redundancy"
  exit 1
fi

CONTAINER_DIRECTORY=$(realpath $1)
CONTAINER_NAME=$2
RAW_SIZE=$3
REDUNDANCY=$4

SIZE=$RAW_SIZE
PRIMARY_IMAGE=$CONTAINER_DIRECTORY/$CONTAINER_NAME/disk.0

mkdir -p $CONTAINER_DIRECTORY/$CONTAINER_NAME
dd if=/dev/zero of=$PRIMARY_IMAGE bs=1M count=$SIZE
cryptsetup -y luksFormat $PRIMARY_IMAGE
sudo cryptsetup luksOpen $PRIMARY_IMAGE $CONTAINER_NAME
sudo mkfs.ext4 -L $CONTAINER_NAME /dev/mapper/$CONTAINER_NAME
sudo cryptsetup luksClose  $CONTAINER_NAME

for((i=1; i < $REDUNDANCY; ++i));
do
  cp $PRIMARY_IMAGE $CONTAINER_DIRECTORY/$CONTAINER_NAME/disk.$i
done
